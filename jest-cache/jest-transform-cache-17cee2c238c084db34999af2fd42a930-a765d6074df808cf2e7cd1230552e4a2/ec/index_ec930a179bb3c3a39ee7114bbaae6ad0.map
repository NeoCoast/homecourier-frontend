{"version":3,"sources":["index.jsx"],"names":["GeneralUserForm","message","errorMessage","value","validateEmail","validatePassword","formValues","validateRepeatPassword","validateDay","validateYear","propTypes","PropTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, FormField, TextInput } from 'grommet';\nimport BirthDatePicker from 'Components/Utils/BirthDatePicker';\nimport {\n  validateDay,\n  validateEmail,\n  validatePassword,\n  validateRepeatPassword,\n  validateYear,\n} from 'Helpers/validator.helper';\n\nconst GeneralUserForm = ({ message, errorMessage }) => (\n  <Box>\n    <Box direction=\"row-responsive\" gap=\"small\" fill=\"horizontal\" justify=\"stretch\" alignContent=\"around\">\n      <FormField name=\"username\" htmlfor=\"username\" label={message('Nombre de Usuario')} fill required>\n        <TextInput name=\"username\" id=\"username\" />\n      </FormField>\n\n      <FormField\n        name=\"email\"\n        htmlfor=\"email\"\n        label={message('Email')}\n        fill\n        validate={(value) => validateEmail(value, errorMessage)}\n      >\n        <TextInput name=\"email\" id=\"email\" />\n      </FormField>\n    </Box>\n\n    <Box direction=\"row-responsive\" gap=\"small\" fill=\"horizontal\" justify=\"stretch\" alignContent=\"around\">\n      <FormField name=\"name\" htmlfor=\"name\" label={message('Nombre')} fill required>\n        <TextInput id=\"name\" name=\"name\" />\n      </FormField>\n\n      <FormField name=\"lastname\" htmlfor=\"lastname\" label={message('Apellido')} fill required>\n        <TextInput id=\"lastname\" name=\"lastname\" />\n      </FormField>\n    </Box>\n\n    <Box direction=\"row-responsive\" gap=\"small\" fill=\"horizontal\" justify=\"center\" alignContent=\"around\">\n      <FormField\n        name=\"password\"\n        htmlfor=\"password\"\n        label={message('Contraseña')}\n        required\n        fill\n        validate={(value) => validatePassword(value, errorMessage)}\n      >\n        <TextInput name=\"password\" id=\"password\" type=\"password\" />\n      </FormField>\n\n      <FormField\n        name=\"repeatPassword\"\n        htmlfor=\"repeatPassword\"\n        label={message('Repetir Contraseña')}\n        fill\n        required\n        validate={(value, formValues) => validateRepeatPassword(value, formValues, errorMessage)}\n      >\n        <TextInput name=\"repeatPassword\" id=\"repeatPassword\" type=\"password\" />\n      </FormField>\n    </Box>\n\n    <Box direction=\"row-responsive\" gap=\"small\" fill=\"horizontal\" justify=\"center\" alignContent=\"around\">\n      <FormField name=\"address\" htmlfor=\"address\" label={message('Dirección')} fill required>\n        <TextInput name=\"address\" id=\"address\" />\n      </FormField>\n\n      <BirthDatePicker\n        validateDay={(value) => validateDay(value, errorMessage)}\n        validateYear={(value) => validateYear(value, errorMessage)}\n      />\n    </Box>\n  </Box>\n);\n\nGeneralUserForm.propTypes = {\n  message: PropTypes.func.isRequired,\n  errorMessage: PropTypes.func.isRequired,\n};\n\nexport default GeneralUserForm;\n"]}