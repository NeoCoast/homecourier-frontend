{"version":3,"sources":["index.jsx"],"names":["VolunteerForm","message","setDocFront","setDocBack","docFront","docBack","mask","lenght","regexp","placeholder","fixed","validateImagesGrommetForm","padding","event","target","files","propTypes","PropTypes","func","isRequired","object","defaultProps"],"mappings":"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","sourcesContent":["import {\n  Box, FormField, MaskedInput, TextInput,\n} from 'grommet';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { validateImagesGrommetForm } from '../../../helpers/validator.helper';\n\nconst VolunteerForm = ({\n  message, setDocFront, setDocBack, docFront, docBack,\n}) => {\n  const mask = [\n    {\n      lenght: [1],\n      regexp: /^[0-9]$/,\n      placeholder: '1',\n    },\n    {\n      fixed: '.',\n    },\n    {\n      lenght: [3],\n      regexp: /^[0-9]{0,3}$/,\n      placeholder: '000',\n    },\n    {\n      fixed: '.',\n    },\n    {\n      lenght: [3],\n      regexp: /^[0-9]{0,3}$/,\n      placeholder: '000',\n    },\n    {\n      fixed: '-',\n    },\n    {\n      lenght: [0, 1],\n      regexp: /^[0-9]?$/,\n      placeholder: '0',\n    },\n  ];\n\n  return (\n    <Box>\n      <Box direction=\"row-responsive\" gap=\"small\" fill=\"horizontal\" justify=\"stretch\" alignContent=\"around\">\n        <FormField\n          name=\"userId\"\n          htmlFor=\"userId\"\n          label={message('NÃºmero de Documento')}\n          fill\n          required\n          size=\"small\"\n        >\n          <MaskedInput data-tip=\"React-tooltip\" name=\"userId\" id=\"userId\" mask={mask} />\n        </FormField>\n        <ReactTooltip place=\"bottom\" type=\"info\" effect=\"float\">\n          Si su CI es menor a un millon ingrese 0 al comienzo.\n        </ReactTooltip>\n        <FormField\n          name=\"documentFace\"\n          htmlFor=\"documentFace\"\n          label={message('Frente del Documento')}\n          fill\n          validate={() => validateImagesGrommetForm(docFront)}\n          required\n        >\n          <TextInput\n            name=\"documentFace\"\n            id=\"documentFace\"\n            type=\"file\"\n            size=\"xsmall\"\n            style={{ padding: '11px' }}\n            onChange={(event) => setDocFront(event.target.files[0])}\n            accept=\"image/*\"\n          />\n        </FormField>\n        <FormField\n          name=\"documentBack\"\n          htmlFor=\"documentBack\"\n          label={message('Dorso  del Documento ')}\n          fill\n          validate={() => validateImagesGrommetForm(docBack)}\n          required\n        >\n          <TextInput\n            name=\"documentBack\"\n            id=\"documentBack\"\n            type=\"file\"\n            size=\"xsmall\"\n            style={{ padding: '11px' }}\n            onChange={(event) => setDocBack(event.target.files[0])}\n            accept=\"image/*\"\n          />\n        </FormField>\n      </Box>\n    </Box>\n  );\n};\n\nVolunteerForm.propTypes = {\n  message: PropTypes.func.isRequired,\n  setDocFront: PropTypes.func.isRequired,\n  setDocBack: PropTypes.func.isRequired,\n  docFront: PropTypes.object,\n  docBack: PropTypes.object,\n};\n\nVolunteerForm.defaultProps = {\n  docFront: null,\n  docBack: null,\n};\n\nexport default VolunteerForm;\n"]}