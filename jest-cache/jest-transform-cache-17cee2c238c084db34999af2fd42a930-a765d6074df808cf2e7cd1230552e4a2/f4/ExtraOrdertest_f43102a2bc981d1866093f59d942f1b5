16bf273669cd2a053c260a085a1a0b6f
"use strict";

_getJestObj().mock('Api/orders.service', function () {
  return {
    take: jest.fn()
  };
});

_getJestObj().mock('react-redux', function () {
  return {
    useDispatch: jest.fn(),
    useSelector: jest.fn(),
    useHistory: function useHistory() {
      return {
        push: jest.fn()
      };
    }
  };
});

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _faker = _interopRequireDefault(require("faker"));

var _react2 = require("@testing-library/react");

var _reactRedux = require("react-redux");

var _orders = _interopRequireDefault(require("Api/orders.service"));

var _OrdersList = _interopRequireDefault(require("Components/OrdersList"));

var _OrderCard = _interopRequireDefault(require("Components/OrderCard"));

var _ViewOrderModal = _interopRequireDefault(require("Components/Modals/ViewOrderModal"));

var _SuccessModal = _interopRequireDefault(require("Components/Modals/SuccessModal"));

function _getJestObj() {
  var _require = require("@jest/globals"),
      jest = _require.jest;

  _getJestObj = function _getJestObj() {
    return jest;
  };

  return jest;
}

describe('Extra order', function () {
  test('Take order', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    var props, setLoading, _render, getByText, getAllByText;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            props = {
              orders: [{
                id: _faker["default"].random.number(),
                description: _faker["default"].lorem.paragraph(),
                title: _faker["default"].random.words(),
                helpee: _faker["default"].internet.userName(),
                categories: [{
                  label: 'Supermercado'
                }]
              }]
            };

            _orders["default"].take.mockImplementation(function () {
              return {
                status: 200
              };
            });

            setLoading = jest.fn();
            _render = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_OrdersList["default"], {
              orders: props.orders,
              setLoading: setLoading
            })), getByText = _render.getByText, getAllByText = _render.getAllByText;

            _react2.fireEvent.click(getByText(/Ver m√°s/i));

            _context.next = 7;
            return _react2.fireEvent.click(getByText(/Postularse/i));

          case 7:
            _context.next = 9;
            return (0, _react2.waitFor)(function () {
              expect(_orders["default"].take).toHaveBeenCalledTimes(1);
            });

          case 9:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV4dHJhT3JkZXIudGVzdC5qcyJdLCJuYW1lcyI6WyJtb2NrIiwidGFrZSIsImplc3QiLCJmbiIsInVzZURpc3BhdGNoIiwidXNlU2VsZWN0b3IiLCJ1c2VIaXN0b3J5IiwicHVzaCIsImRlc2NyaWJlIiwidGVzdCIsInByb3BzIiwib3JkZXJzIiwiaWQiLCJmYWtlciIsInJhbmRvbSIsIm51bWJlciIsImRlc2NyaXB0aW9uIiwibG9yZW0iLCJwYXJhZ3JhcGgiLCJ0aXRsZSIsIndvcmRzIiwiaGVscGVlIiwiaW50ZXJuZXQiLCJ1c2VyTmFtZSIsImNhdGVnb3JpZXMiLCJsYWJlbCIsIm9yZGVyc1NlcnZpY2UiLCJtb2NrSW1wbGVtZW50YXRpb24iLCJzdGF0dXMiLCJzZXRMb2FkaW5nIiwiZ2V0QnlUZXh0IiwiZ2V0QWxsQnlUZXh0IiwiZmlyZUV2ZW50IiwiY2xpY2siLCJleHBlY3QiLCJ0b0hhdmVCZWVuQ2FsbGVkVGltZXMiXSwibWFwcGluZ3MiOiI7O0FBa0JBLGNBQUtBLElBQUwsQ0FBVSxvQkFBVixFQUFnQztBQUFBLFNBQU87QUFDckNDLElBQUFBLElBQUksRUFBRUMsSUFBSSxDQUFDQyxFQUFMO0FBRCtCLEdBQVA7QUFBQSxDQUFoQzs7QUFSQSxjQUFLSCxJQUFMLENBQVUsYUFBVixFQUF5QjtBQUFBLFNBQU87QUFDOUJJLElBQUFBLFdBQVcsRUFBRUYsSUFBSSxDQUFDQyxFQUFMLEVBRGlCO0FBRTlCRSxJQUFBQSxXQUFXLEVBQUVILElBQUksQ0FBQ0MsRUFBTCxFQUZpQjtBQUc5QkcsSUFBQUEsVUFBVSxFQUFFO0FBQUEsYUFBTztBQUNqQkMsUUFBQUEsSUFBSSxFQUFFTCxJQUFJLENBQUNDLEVBQUw7QUFEVyxPQUFQO0FBQUE7QUFIa0IsR0FBUDtBQUFBLENBQXpCOzs7Ozs7OztBQVZBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7O0FBY0FLLFFBQVEsQ0FBQyxhQUFELEVBQWdCLFlBQU07QUFDNUJDLEVBQUFBLElBQUksQ0FBQyxZQUFELDZGQUFlO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDWEMsWUFBQUEsS0FEVyxHQUNIO0FBQ1pDLGNBQUFBLE1BQU0sRUFBRSxDQUFDO0FBQ1BDLGdCQUFBQSxFQUFFLEVBQUVDLGtCQUFNQyxNQUFOLENBQWFDLE1BQWIsRUFERztBQUVQQyxnQkFBQUEsV0FBVyxFQUFFSCxrQkFBTUksS0FBTixDQUFZQyxTQUFaLEVBRk47QUFHUEMsZ0JBQUFBLEtBQUssRUFBRU4sa0JBQU1DLE1BQU4sQ0FBYU0sS0FBYixFQUhBO0FBSVBDLGdCQUFBQSxNQUFNLEVBQUVSLGtCQUFNUyxRQUFOLENBQWVDLFFBQWYsRUFKRDtBQUtQQyxnQkFBQUEsVUFBVSxFQUFFLENBQUM7QUFDWEMsa0JBQUFBLEtBQUssRUFBRTtBQURJLGlCQUFEO0FBTEwsZUFBRDtBQURJLGFBREc7O0FBWWpCQywrQkFBY3pCLElBQWQsQ0FBbUIwQixrQkFBbkIsQ0FBc0M7QUFBQSxxQkFBTztBQUFFQyxnQkFBQUEsTUFBTSxFQUFFO0FBQVYsZUFBUDtBQUFBLGFBQXRDOztBQUNNQyxZQUFBQSxVQWJXLEdBYUUzQixJQUFJLENBQUNDLEVBQUwsRUFiRjtBQUFBLHNCQWNtQixrQ0FBTyxnQ0FBQyxzQkFBRDtBQUFRLGNBQUEsTUFBTSxFQUFFTyxLQUFLLENBQUNDLE1BQXRCO0FBQThCLGNBQUEsVUFBVSxFQUFFa0I7QUFBMUMsY0FBUCxDQWRuQixFQWNUQyxTQWRTLFdBY1RBLFNBZFMsRUFjRUMsWUFkRixXQWNFQSxZQWRGOztBQWVqQkMsOEJBQVVDLEtBQVYsQ0FBZ0JILFNBQVMsQ0FBQyxVQUFELENBQXpCOztBQWZpQjtBQUFBLG1CQWdCWEUsa0JBQVVDLEtBQVYsQ0FBZ0JILFNBQVMsQ0FBQyxhQUFELENBQXpCLENBaEJXOztBQUFBO0FBQUE7QUFBQSxtQkFpQlgscUJBQVEsWUFBTTtBQUNsQkksY0FBQUEsTUFBTSxDQUFDUixtQkFBY3pCLElBQWYsQ0FBTixDQUEyQmtDLHFCQUEzQixDQUFpRCxDQUFqRDtBQUNELGFBRkssQ0FqQlc7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBZixHQUFKO0FBcUJELENBdEJPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGZha2VyIGZyb20gJ2Zha2VyJztcbmltcG9ydCB7IGZpcmVFdmVudCwgcmVuZGVyLCB3YWl0Rm9yIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBvcmRlcnNTZXJ2aWNlIGZyb20gJ0FwaS9vcmRlcnMuc2VydmljZSc7XG5pbXBvcnQgT3JkZXJzIGZyb20gJ0NvbXBvbmVudHMvT3JkZXJzTGlzdCc7XG5pbXBvcnQgT3JkZXIgZnJvbSAnQ29tcG9uZW50cy9PcmRlckNhcmQnO1xuaW1wb3J0IFZpZXdPcmRlck1vZGFsIGZyb20gJ0NvbXBvbmVudHMvTW9kYWxzL1ZpZXdPcmRlck1vZGFsJztcbmltcG9ydCBTdWNjZXNzTW9kYWwgZnJvbSAnQ29tcG9uZW50cy9Nb2RhbHMvU3VjY2Vzc01vZGFsJztcblxuamVzdC5tb2NrKCdyZWFjdC1yZWR1eCcsICgpID0+ICh7XG4gIHVzZURpc3BhdGNoOiBqZXN0LmZuKCksXG4gIHVzZVNlbGVjdG9yOiBqZXN0LmZuKCksXG4gIHVzZUhpc3Rvcnk6ICgpID0+ICh7XG4gICAgcHVzaDogamVzdC5mbigpLFxuICB9KSxcbn0pKTtcblxuamVzdC5tb2NrKCdBcGkvb3JkZXJzLnNlcnZpY2UnLCAoKSA9PiAoe1xuICB0YWtlOiBqZXN0LmZuKCksXG59KSk7XG5cbmRlc2NyaWJlKCdFeHRyYSBvcmRlcicsICgpID0+IHtcbiAgdGVzdCgnVGFrZSBvcmRlcicsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBwcm9wcyA9IHtcbiAgICAgIG9yZGVyczogW3tcbiAgICAgICAgaWQ6IGZha2VyLnJhbmRvbS5udW1iZXIoKSxcbiAgICAgICAgZGVzY3JpcHRpb246IGZha2VyLmxvcmVtLnBhcmFncmFwaCgpLFxuICAgICAgICB0aXRsZTogZmFrZXIucmFuZG9tLndvcmRzKCksXG4gICAgICAgIGhlbHBlZTogZmFrZXIuaW50ZXJuZXQudXNlck5hbWUoKSxcbiAgICAgICAgY2F0ZWdvcmllczogW3tcbiAgICAgICAgICBsYWJlbDogJ1N1cGVybWVyY2FkbycsXG4gICAgICAgIH1dLFxuICAgICAgfV0sXG4gICAgfTtcbiAgICBvcmRlcnNTZXJ2aWNlLnRha2UubW9ja0ltcGxlbWVudGF0aW9uKCgpID0+ICh7IHN0YXR1czogMjAwIH0pKTtcbiAgICBjb25zdCBzZXRMb2FkaW5nID0gamVzdC5mbigpO1xuICAgIGNvbnN0IHsgZ2V0QnlUZXh0LCBnZXRBbGxCeVRleHQgfSA9IHJlbmRlcig8T3JkZXJzIG9yZGVycz17cHJvcHMub3JkZXJzfSBzZXRMb2FkaW5nPXtzZXRMb2FkaW5nfSAvPik7XG4gICAgZmlyZUV2ZW50LmNsaWNrKGdldEJ5VGV4dCgvVmVyIG3DoXMvaSkpO1xuICAgIGF3YWl0IGZpcmVFdmVudC5jbGljayhnZXRCeVRleHQoL1Bvc3R1bGFyc2UvaSkpO1xuICAgIGF3YWl0IHdhaXRGb3IoKCkgPT4ge1xuICAgICAgZXhwZWN0KG9yZGVyc1NlcnZpY2UudGFrZSkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDEpO1xuICAgIH0pO1xuICB9KTtcbn0pOyJdfQ==