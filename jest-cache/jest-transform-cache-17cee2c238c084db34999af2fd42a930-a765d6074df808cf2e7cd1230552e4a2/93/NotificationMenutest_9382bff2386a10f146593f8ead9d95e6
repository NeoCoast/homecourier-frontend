facefdd94d17ef122ea28dd6514ec450
"use strict";

_getJestObj().mock('Api/notifications.service', function () {
  return {
    setSeenNotifications: jest.fn(),
    getNotifications: jest.fn()
  };
});

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _reactRedux = require("react-redux");

var _faker = _interopRequireDefault(require("faker"));

var _NotificationMenu = _interopRequireDefault(require("Components/NotificationMenu"));

var _notifications = _interopRequireDefault(require("Api/notifications.service"));

var _logUser = _interopRequireDefault(require("Reducers/logUser"));

var _toolkit = require("@reduxjs/toolkit");

var _redux = require("redux");

var _luxon = require("luxon");

function _getJestObj() {
  var _require = require("@jest/globals"),
      jest = _require.jest;

  _getJestObj = function _getJestObj() {
    return jest;
  };

  return jest;
}

function renderWithProviders(ui, reduxState) {
  var initialState = {
    logUser: {
      data: {
        documentNumber: '232323'
      },
      loggedIn: false
    },
    userNotifications: {
      notifications: []
    }
  };
  var rootReducer = (0, _toolkit.combineReducers)({
    logUser: _logUser["default"],
    userNotifications: _logUser["default"]
  });
  var store = (0, _redux.createStore)(rootReducer, reduxState || initialState);
  return (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_reactRedux.Provider, {
    store: store
  }, ui));
}

describe('Notification Menu Empty', function () {
  test('Has notification button', function () {
    renderWithProviders( /*#__PURE__*/_react["default"].createElement(_NotificationMenu["default"], null));
    expect(document.getElementById('noty-stack')).toBeInTheDocument();
  });
  test('Opens Dropdown', function () {
    var _renderWithProviders = renderWithProviders( /*#__PURE__*/_react["default"].createElement(_NotificationMenu["default"], null)),
        getByText = _renderWithProviders.getByText;

    _react2.fireEvent.click(document.getElementById('noty-stack'));

    expect(getByText('Notificaciones')).toBeInTheDocument();
  });
  test('No notifications', function () {
    var _renderWithProviders2 = renderWithProviders( /*#__PURE__*/_react["default"].createElement(_NotificationMenu["default"], null)),
        getAllByText = _renderWithProviders2.getAllByText;

    _react2.fireEvent.click(document.getElementById('noty-stack'));

    expect(getAllByText(/No hay notificaciones/i)).toHaveLength(2);
  });
});
var state = {
  logUser: {
    data: {
      documentNumber: '232323'
    },
    loggedIn: false
  },
  userNotifications: {
    notifications: [{
      id: 1,
      title: 'Una notificacion',
      body: 'notificacion',
      status: 'not_seen',
      createdAt: _faker["default"].date.past()
    }]
  }
};
describe('Notification Menu Only New', function () {
  test('No seen notifications', function () {
    var _renderWithProviders3 = renderWithProviders( /*#__PURE__*/_react["default"].createElement(_NotificationMenu["default"], null), state),
        getAllByText = _renderWithProviders3.getAllByText;

    _react2.fireEvent.click(document.getElementById('noty-stack'));

    expect(getAllByText(/No hay notificaciones/i)).toHaveLength(1);
  });
  test('New notifications', function () {
    var _renderWithProviders4 = renderWithProviders( /*#__PURE__*/_react["default"].createElement(_NotificationMenu["default"], null), state),
        getByText = _renderWithProviders4.getByText;

    _react2.fireEvent.click(document.getElementById('noty-stack'));

    expect(getByText(/Una notificacion/i)).toBeInTheDocument();
  });
  test('View History', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    var _yield$renderWithProv, getByText;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _notifications["default"].getNotifications.mockImplementation(function () {
              return {
                status: 200,
                data: {
                  notifications: [{
                    id: 2,
                    title: 'Historia',
                    body: 'notificacion',
                    status: 'seen',
                    createdAt: _faker["default"].date.past()
                  }]
                }
              };
            });

            _context.next = 3;
            return renderWithProviders( /*#__PURE__*/_react["default"].createElement(_NotificationMenu["default"], null), state);

          case 3:
            _yield$renderWithProv = _context.sent;
            getByText = _yield$renderWithProv.getByText;

            _react2.fireEvent.click(document.getElementById('noty-stack'));

            _react2.fireEvent.click(getByText(/Ver todas/i));

            _context.next = 9;
            return (0, _react2.waitFor)(function () {
              expect(getByText(/Historia/i)).toBeInTheDocument();
            });

          case 9:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
  test('View History And Close', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
    var _yield$renderWithProv2, getByText, queryByText;

    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _notifications["default"].getNotifications.mockImplementation(function () {
              return {
                status: 200,
                data: {
                  notifications: [{
                    id: 2,
                    title: 'Historia',
                    body: 'notificacion',
                    status: 'seen',
                    createdAt: _luxon.DateTime.local().toISO()
                  }]
                }
              };
            });

            _context2.next = 3;
            return renderWithProviders( /*#__PURE__*/_react["default"].createElement(_NotificationMenu["default"], null), state);

          case 3:
            _yield$renderWithProv2 = _context2.sent;
            getByText = _yield$renderWithProv2.getByText;
            queryByText = _yield$renderWithProv2.queryByText;

            _react2.fireEvent.click(document.getElementById('noty-stack'));

            _react2.fireEvent.click(getByText(/Ver todas/i));

            _context2.next = 10;
            return (0, _react2.waitFor)(function () {
              expect(getByText(/Historia/i)).toBeInTheDocument();
            });

          case 10:
            _react2.fireEvent.click(getByText(/Esconder/i));

            _context2.next = 13;
            return (0, _react2.waitFor)(function () {
              expect(queryByText(/Historia/i)).toBeNull();
            });

          case 13:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  })));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,