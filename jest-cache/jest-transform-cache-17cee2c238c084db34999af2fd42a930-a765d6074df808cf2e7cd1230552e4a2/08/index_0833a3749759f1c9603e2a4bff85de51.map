{"version":3,"sources":["index.jsx"],"names":["ViewOrderModal","order","onClose","onConfirm","horizontal","top","bottom","title","vertical","helpee","categories","description","id","propTypes","PropTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Layer, Heading, Paragraph, Box, Button,\n} from 'grommet';\nimport PropTypes from 'prop-types';\nimport ChipContainer from 'Components/Utils/ChipContainer';\nimport UserProfileInfo from 'Components/Utils/UserProfileInfo';\n\nconst ViewOrderModal = ({ order, onClose, onConfirm }) => (\n  <Layer responsive={false} onEsc={onClose} onClickOutside={onClose} full=\"horizontal\" margin=\"xlarge\" round=\"large\">\n    <Heading level=\"3\" margin={{ horizontal: 'large', top: 'large', bottom: 'none' }}>\n      {order.title}\n    </Heading>\n    <Box pad={{ horizontal: 'large', vertical: 'medium' }} gap=\"medium\" fill>\n      <UserProfileInfo user={order.helpee} />\n      <Box>\n        <Heading level=\"4\" margin={{ vertical: 'small', horizontal: 'none' }}>\n          Categorías\n        </Heading>\n        <ChipContainer items={order.categories} label=\"description\" />\n      </Box>\n      <Box>\n        <Heading level=\"4\" margin={{ vertical: 'small', horizontal: 'none' }}>\n          Descripción\n        </Heading>\n        <Paragraph size=\"small\" margin=\"none\" fill>\n          {order.description}\n        </Paragraph>\n      </Box>\n      <Box direction=\"row\" gap=\"small\" fill justify=\"end\">\n        <Button secondary label=\"Cancelar\" onClick={onClose} />\n        <Button\n          primary\n          label=\"Postularse\"\n          onClick={() => {\n            onConfirm(order.id);\n            onClose();\n          }}\n        />\n      </Box>\n    </Box>\n  </Layer>\n);\n\nViewOrderModal.propTypes = {\n  order: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default ViewOrderModal;\n"]}