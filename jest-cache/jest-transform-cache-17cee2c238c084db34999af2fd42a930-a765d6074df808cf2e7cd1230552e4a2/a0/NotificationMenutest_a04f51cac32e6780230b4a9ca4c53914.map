{"version":3,"sources":["NotificationMenu.test.js"],"names":["mock","setSeenNotifications","jest","fn","getNotifications","renderWithProviders","ui","reduxState","initialState","logUser","data","documentNumber","loggedIn","userNotifications","notifications","rootReducer","store","describe","test","expect","document","getElementById","toBeInTheDocument","getByText","fireEvent","click","getAllByText","toHaveLength","state","id","title","body","status","createdAt","faker","date","past","notificationsService","mockImplementation","DateTime","local","minus","day","toISO","queryByText","toBeNull","keyDown","key","keyCode","length","toBeGreaterThan"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport faker from 'faker';\nimport NotificationMenu from 'Components/NotificationMenu';\nimport notificationsService from 'Api/notifications.service';\nimport logUser from 'Reducers/logUser';\nimport userNotifications from 'Reducers/logUser';\nimport { combineReducers } from '@reduxjs/toolkit';\nimport { createStore } from 'redux';\nimport { DateTime } from 'luxon';\n\nfunction renderWithProviders(ui, reduxState) {\n  const initialState = {\n    logUser: {\n      data: { documentNumber: '232323' },\n      loggedIn: false,\n    },\n    userNotifications: {\n      notifications: [],\n    },\n  };\n  const rootReducer = combineReducers({\n    logUser,\n    userNotifications,\n  });\n  const store = createStore(rootReducer, reduxState || initialState);\n  return render(<Provider store={store}>{ui}</Provider>);\n}\n\njest.mock('Api/notifications.service', () => ({\n  setSeenNotifications: jest.fn(),\n  getNotifications: jest.fn(),\n}));\n\ndescribe('Notification Menu Empty', () => {\n  test('Has notification button', () => {\n    renderWithProviders(<NotificationMenu />);\n    expect(document.getElementById('noty-stack')).toBeInTheDocument();\n  });\n\n  test('Opens Dropdown', () => {\n    const { getByText } = renderWithProviders(<NotificationMenu />);\n    fireEvent.click(document.getElementById('noty-stack'));\n    expect(getByText('Notificaciones')).toBeInTheDocument();\n  });\n\n  test('No notifications', () => {\n    const { getAllByText } = renderWithProviders(<NotificationMenu />);\n    fireEvent.click(document.getElementById('noty-stack'));\n    expect(getAllByText(/No hay notificaciones/i)).toHaveLength(2);\n  });\n});\nconst state = {\n  logUser: {\n    data: { documentNumber: '232323' },\n    loggedIn: false,\n  },\n  userNotifications: {\n    notifications: [\n      {\n        id: 1,\n        title: 'Una notificacion',\n        body: 'notificacion',\n        status: 'not_seen',\n        createdAt: faker.date.past(),\n      },\n    ],\n  },\n};\ndescribe('Notification Menu Only New', () => {\n  test('No seen notifications', () => {\n    const { getAllByText } = renderWithProviders(<NotificationMenu />, state);\n    fireEvent.click(document.getElementById('noty-stack'));\n    expect(getAllByText(/No hay notificaciones/i)).toHaveLength(1);\n  });\n\n  test('New notifications', () => {\n    const { getByText } = renderWithProviders(<NotificationMenu />, state);\n    fireEvent.click(document.getElementById('noty-stack'));\n    expect(getByText(/Una notificacion/i)).toBeInTheDocument();\n  });\n\n  test('View History', async () => {\n    notificationsService.getNotifications.mockImplementation(() => ({\n      status: 200,\n      data: {\n        notifications: [\n          {\n            id: 2,\n            title: 'Historia',\n            body: 'notificacion',\n            status: 'seen',\n            createdAt: DateTime.local().minus({ day: 1 }).toISO(),\n          },\n        ],\n      },\n    }));\n    const { getByText } = await renderWithProviders(<NotificationMenu />, state);\n    fireEvent.click(document.getElementById('noty-stack'));\n    fireEvent.click(getByText(/Ver todas/i));\n    await waitFor(() => {\n      expect(getByText(/Historia/i)).toBeInTheDocument();\n    });\n  });\n\n  test('View History And Close', async () => {\n    notificationsService.getNotifications.mockImplementation(() => ({\n      status: 200,\n      data: {\n        notifications: [\n          {\n            id: 2,\n            title: 'Historia',\n            body: 'notificacion',\n            status: 'seen',\n            createdAt: DateTime.local().toISO(),\n          },\n        ],\n      },\n    }));\n    const { getByText, queryByText } = await renderWithProviders(<NotificationMenu />, state);\n    fireEvent.click(document.getElementById('noty-stack'));\n    fireEvent.click(getByText(/Ver todas/i));\n    await waitFor(() => {\n      expect(getByText(/Historia/i)).toBeInTheDocument();\n    });\n    fireEvent.click(getByText(/Esconder/i));\n    await waitFor(() => {\n      expect(queryByText(/Historia/i)).toBeNull();\n    });\n  });\n\n  test('Open And Close', async () => {\n    notificationsService.getNotifications.mockImplementation(() => ({\n      status: 200,\n      data: {\n        notifications: [\n          {\n            id: 2,\n            title: 'Historia',\n            body: 'notificacion',\n            status: 'seen',\n            createdAt: DateTime.local().toISO(),\n          },\n        ],\n      },\n    }));\n    const { getByText, queryByText } = await renderWithProviders(<NotificationMenu />, state);\n    fireEvent.click(document.getElementById('noty-stack'));\n    fireEvent.click(getByText(/Ver todas/i));\n    fireEvent.keyDown(document.getElementById('noty-stack'), { key: 'Escape', keyCode: 27 });\n    await waitFor(() => {\n      expect(queryByText(/Notificaciones/i)).toBeNull();\n    });\n  });\n\n  test('Open, Close And Again', async () => {\n    notificationsService.setSeenNotifications.mockImplementation(() => ({\n      status: 200,\n    }));\n    const { getAllByText, queryByText } = await renderWithProviders(<NotificationMenu />, state);\n    fireEvent.click(document.getElementById('noty-stack'));\n    fireEvent.keyDown(document.getElementById('noty-stack'), { key: 'Escape', keyCode: 27 });\n    await waitFor(() => {\n      expect(queryByText(/Notificaciones/i)).toBeNull();\n    });\n    fireEvent.click(document.getElementById('noty-stack'));\n    await waitFor(() => {\n      expect(getAllByText(/Notificaciones/i).length).toBeGreaterThan(0);\n    });\n  });\n});\n"]}