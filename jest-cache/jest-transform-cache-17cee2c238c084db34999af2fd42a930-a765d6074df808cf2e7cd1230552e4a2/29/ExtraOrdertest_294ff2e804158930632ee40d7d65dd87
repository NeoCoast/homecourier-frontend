0c6f6a0bfb4588d8883dec8a3c094dcf
"use strict";

_getJestObj().mock('Api/orders.service', function () {
  return {
    takeOrder: jest.fn()
  };
});

_getJestObj().mock('react-redux', function () {
  return {
    useDispatch: jest.fn(),
    useSelector: jest.fn(),
    useHistory: function useHistory() {
      return {
        push: jest.fn()
      };
    }
  };
});

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _faker = _interopRequireDefault(require("faker"));

var _react2 = require("@testing-library/react");

var _reactRedux = require("react-redux");

var _orders = _interopRequireDefault(require("Api/orders.service"));

var _OrdersList = _interopRequireDefault(require("Components/OrdersList"));

var _OrderCard = _interopRequireDefault(require("Components/OrderCard"));

var _ViewOrderModal = _interopRequireDefault(require("Components/Modals/ViewOrderModal"));

var _SuccessModal = _interopRequireDefault(require("Components/Modals/SuccessModal"));

function _getJestObj() {
  var _require = require("@jest/globals"),
      jest = _require.jest;

  _getJestObj = function _getJestObj() {
    return jest;
  };

  return jest;
}

describe('Extra order', function () {
  test('Take order', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    var props, setLoading, _render, getByText, getAllByText;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            props = {
              orders: [{
                id: _faker["default"].random.number(),
                description: _faker["default"].lorem.paragraph(),
                title: _faker["default"].random.words(),
                helpee: _faker["default"].internet.userName(),
                categories: [{
                  label: 'Supermercado'
                }]
              }]
            };

            _orders["default"].takeOrder.mockImplementation(function () {
              return {
                status: 200
              };
            });

            setLoading = jest.fn();
            _render = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_OrdersList["default"], {
              orders: props.orders,
              setLoading: setLoading
            })), getByText = _render.getByText, getAllByText = _render.getAllByText;

            _react2.fireEvent.click(getByText(/Ver m√°s/i));

            _context.next = 7;
            return _react2.fireEvent.click(getByText(/Postularse/i));

          case 7:
            _context.next = 9;
            return (0, _react2.waitFor)(function () {
              expect(/Hubo un error./).toBeInTheDocument();
            });

          case 9:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV4dHJhT3JkZXIudGVzdC5qcyJdLCJuYW1lcyI6WyJtb2NrIiwidGFrZU9yZGVyIiwiamVzdCIsImZuIiwidXNlRGlzcGF0Y2giLCJ1c2VTZWxlY3RvciIsInVzZUhpc3RvcnkiLCJwdXNoIiwiZGVzY3JpYmUiLCJ0ZXN0IiwicHJvcHMiLCJvcmRlcnMiLCJpZCIsImZha2VyIiwicmFuZG9tIiwibnVtYmVyIiwiZGVzY3JpcHRpb24iLCJsb3JlbSIsInBhcmFncmFwaCIsInRpdGxlIiwid29yZHMiLCJoZWxwZWUiLCJpbnRlcm5ldCIsInVzZXJOYW1lIiwiY2F0ZWdvcmllcyIsImxhYmVsIiwib3JkZXJzU2VydmljZSIsIm1vY2tJbXBsZW1lbnRhdGlvbiIsInN0YXR1cyIsInNldExvYWRpbmciLCJnZXRCeVRleHQiLCJnZXRBbGxCeVRleHQiLCJmaXJlRXZlbnQiLCJjbGljayIsImV4cGVjdCIsInRvQmVJblRoZURvY3VtZW50Il0sIm1hcHBpbmdzIjoiOztBQWtCQSxjQUFLQSxJQUFMLENBQVUsb0JBQVYsRUFBZ0M7QUFBQSxTQUFPO0FBQ3JDQyxJQUFBQSxTQUFTLEVBQUVDLElBQUksQ0FBQ0MsRUFBTDtBQUQwQixHQUFQO0FBQUEsQ0FBaEM7O0FBUkEsY0FBS0gsSUFBTCxDQUFVLGFBQVYsRUFBeUI7QUFBQSxTQUFPO0FBQzlCSSxJQUFBQSxXQUFXLEVBQUVGLElBQUksQ0FBQ0MsRUFBTCxFQURpQjtBQUU5QkUsSUFBQUEsV0FBVyxFQUFFSCxJQUFJLENBQUNDLEVBQUwsRUFGaUI7QUFHOUJHLElBQUFBLFVBQVUsRUFBRTtBQUFBLGFBQU87QUFDakJDLFFBQUFBLElBQUksRUFBRUwsSUFBSSxDQUFDQyxFQUFMO0FBRFcsT0FBUDtBQUFBO0FBSGtCLEdBQVA7QUFBQSxDQUF6Qjs7Ozs7Ozs7QUFWQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7OztBQWNBSyxRQUFRLENBQUMsYUFBRCxFQUFnQixZQUFNO0FBQzVCQyxFQUFBQSxJQUFJLENBQUMsWUFBRCw2RkFBZTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1hDLFlBQUFBLEtBRFcsR0FDSDtBQUNaQyxjQUFBQSxNQUFNLEVBQUUsQ0FBQztBQUNQQyxnQkFBQUEsRUFBRSxFQUFFQyxrQkFBTUMsTUFBTixDQUFhQyxNQUFiLEVBREc7QUFFUEMsZ0JBQUFBLFdBQVcsRUFBRUgsa0JBQU1JLEtBQU4sQ0FBWUMsU0FBWixFQUZOO0FBR1BDLGdCQUFBQSxLQUFLLEVBQUVOLGtCQUFNQyxNQUFOLENBQWFNLEtBQWIsRUFIQTtBQUlQQyxnQkFBQUEsTUFBTSxFQUFFUixrQkFBTVMsUUFBTixDQUFlQyxRQUFmLEVBSkQ7QUFLUEMsZ0JBQUFBLFVBQVUsRUFBRSxDQUFDO0FBQ1hDLGtCQUFBQSxLQUFLLEVBQUU7QUFESSxpQkFBRDtBQUxMLGVBQUQ7QUFESSxhQURHOztBQVlqQkMsK0JBQWN6QixTQUFkLENBQXdCMEIsa0JBQXhCLENBQTJDO0FBQUEscUJBQU87QUFBRUMsZ0JBQUFBLE1BQU0sRUFBRTtBQUFWLGVBQVA7QUFBQSxhQUEzQzs7QUFDTUMsWUFBQUEsVUFiVyxHQWFFM0IsSUFBSSxDQUFDQyxFQUFMLEVBYkY7QUFBQSxzQkFjbUIsa0NBQU8sZ0NBQUMsc0JBQUQ7QUFBUSxjQUFBLE1BQU0sRUFBRU8sS0FBSyxDQUFDQyxNQUF0QjtBQUE4QixjQUFBLFVBQVUsRUFBRWtCO0FBQTFDLGNBQVAsQ0FkbkIsRUFjVEMsU0FkUyxXQWNUQSxTQWRTLEVBY0VDLFlBZEYsV0FjRUEsWUFkRjs7QUFlakJDLDhCQUFVQyxLQUFWLENBQWdCSCxTQUFTLENBQUMsVUFBRCxDQUF6Qjs7QUFmaUI7QUFBQSxtQkFnQlhFLGtCQUFVQyxLQUFWLENBQWdCSCxTQUFTLENBQUMsYUFBRCxDQUF6QixDQWhCVzs7QUFBQTtBQUFBO0FBQUEsbUJBaUJYLHFCQUFRLFlBQU07QUFDbEJJLGNBQUFBLE1BQU0sQ0FBQyxnQkFBRCxDQUFOLENBQXlCQyxpQkFBekI7QUFDRCxhQUZLLENBakJXOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWYsR0FBSjtBQXFCRCxDQXRCTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQgeyBmaXJlRXZlbnQsIHJlbmRlciwgd2FpdEZvciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnO1xuaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgb3JkZXJzU2VydmljZSBmcm9tICdBcGkvb3JkZXJzLnNlcnZpY2UnO1xuaW1wb3J0IE9yZGVycyBmcm9tICdDb21wb25lbnRzL09yZGVyc0xpc3QnO1xuaW1wb3J0IE9yZGVyIGZyb20gJ0NvbXBvbmVudHMvT3JkZXJDYXJkJztcbmltcG9ydCBWaWV3T3JkZXJNb2RhbCBmcm9tICdDb21wb25lbnRzL01vZGFscy9WaWV3T3JkZXJNb2RhbCc7XG5pbXBvcnQgU3VjY2Vzc01vZGFsIGZyb20gJ0NvbXBvbmVudHMvTW9kYWxzL1N1Y2Nlc3NNb2RhbCc7XG5cbmplc3QubW9jaygncmVhY3QtcmVkdXgnLCAoKSA9PiAoe1xuICB1c2VEaXNwYXRjaDogamVzdC5mbigpLFxuICB1c2VTZWxlY3RvcjogamVzdC5mbigpLFxuICB1c2VIaXN0b3J5OiAoKSA9PiAoe1xuICAgIHB1c2g6IGplc3QuZm4oKSxcbiAgfSksXG59KSk7XG5cbmplc3QubW9jaygnQXBpL29yZGVycy5zZXJ2aWNlJywgKCkgPT4gKHtcbiAgdGFrZU9yZGVyOiBqZXN0LmZuKCksXG59KSk7XG5cbmRlc2NyaWJlKCdFeHRyYSBvcmRlcicsICgpID0+IHtcbiAgdGVzdCgnVGFrZSBvcmRlcicsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBwcm9wcyA9IHtcbiAgICAgIG9yZGVyczogW3tcbiAgICAgICAgaWQ6IGZha2VyLnJhbmRvbS5udW1iZXIoKSxcbiAgICAgICAgZGVzY3JpcHRpb246IGZha2VyLmxvcmVtLnBhcmFncmFwaCgpLFxuICAgICAgICB0aXRsZTogZmFrZXIucmFuZG9tLndvcmRzKCksXG4gICAgICAgIGhlbHBlZTogZmFrZXIuaW50ZXJuZXQudXNlck5hbWUoKSxcbiAgICAgICAgY2F0ZWdvcmllczogW3tcbiAgICAgICAgICBsYWJlbDogJ1N1cGVybWVyY2FkbycsXG4gICAgICAgIH1dLFxuICAgICAgfV0sXG4gICAgfTtcbiAgICBvcmRlcnNTZXJ2aWNlLnRha2VPcmRlci5tb2NrSW1wbGVtZW50YXRpb24oKCkgPT4gKHsgc3RhdHVzOiAyMDAgfSkpO1xuICAgIGNvbnN0IHNldExvYWRpbmcgPSBqZXN0LmZuKCk7XG4gICAgY29uc3QgeyBnZXRCeVRleHQsIGdldEFsbEJ5VGV4dCB9ID0gcmVuZGVyKDxPcmRlcnMgb3JkZXJzPXtwcm9wcy5vcmRlcnN9IHNldExvYWRpbmc9e3NldExvYWRpbmd9IC8+KTtcbiAgICBmaXJlRXZlbnQuY2xpY2soZ2V0QnlUZXh0KC9WZXIgbcOhcy9pKSk7XG4gICAgYXdhaXQgZmlyZUV2ZW50LmNsaWNrKGdldEJ5VGV4dCgvUG9zdHVsYXJzZS9pKSk7XG4gICAgYXdhaXQgd2FpdEZvcigoKSA9PiB7XG4gICAgICBleHBlY3QoL0h1Ym8gdW4gZXJyb3IuLykudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICB9KTtcbiAgfSk7XG59KTsiXX0=