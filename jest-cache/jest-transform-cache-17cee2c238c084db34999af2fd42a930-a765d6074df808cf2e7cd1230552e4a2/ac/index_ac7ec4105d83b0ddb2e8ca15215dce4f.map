{"version":3,"sources":["index.jsx"],"names":["OrdersList","orders","setLoading","takeOrder","orderId","ordersService","take","volunteerId","setMessage","setSuccessModal","setErrorModal","useSelector","state","logUser","data","id","useState","viewOrder","setViewOrder","errorModal","successModal","message","viewportSize","useContext","ResponsiveContext","orderSelected","setOrderSelected","openModal","order","closeModal","horizontal","vertical","propTypes","PropTypes","array","isRequired","func"],"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Box, InfiniteScroll, ResponsiveContext } from 'grommet';\nimport PropTypes from 'prop-types';\nimport ordersService from 'Api/orders.service';\nimport { useSelector } from 'react-redux';\nimport OrderCard from 'Components/OrderCard';\nimport ViewOrderModal from 'Components/Modals/ViewOrderModal';\nimport ErrorModal from 'Components/Modals/ErrorModal';\nimport SuccessModal from 'Components/Modals/SuccessModal';\n\nconst OrdersList = ({ orders, setLoading }) => {\n  const takeOrder = async (orderId) => {\n    try {\n      setLoading(true);\n      await ordersService.take({\n        volunteerId,\n        orderId,\n      });\n      setLoading(false);\n      setMessage('Ha tomado la orden! Gracias por ayudar!');\n      setSuccessModal(true);\n    } catch (error) {\n      setLoading(false);\n      setMessage('Hubo un error.');\n      setErrorModal(true);\n    }\n  };\n  const volunteerId = useSelector((state) => state.logUser.data.id);\n\n  const [viewOrder, setViewOrder] = useState(false);\n  const [errorModal, setErrorModal] = useState(false);\n  const [successModal, setSuccessModal] = useState(false);\n  const [message, setMessage] = useState('');\n  const viewportSize = useContext(ResponsiveContext);\n  const [orderSelected, setOrderSelected] = useState(null);\n\n  const openModal = (order) => {\n    setOrderSelected(order);\n    setViewOrder(true);\n  };\n\n  const closeModal = () => {\n    setViewOrder(false);\n  };\n\n  return (\n    <Box overflow=\"auto\" flex={false}>\n\n      <InfiniteScroll\n\n        direction=\"column\"\n        pad={{ horizontal: viewportSize === 'small' ? 'small' : '20vw', vertical: 'medium' }}\n        overflow=\"auto\"\n        fill\n        items={orders}\n      >\n        {(order) => (\n          <OrderCard order={order} viewportSize={viewportSize} key={order.id} openModal={openModal} />\n        )}\n      </InfiniteScroll>\n\n      {errorModal && <ErrorModal setShow={setErrorModal} show={errorModal} errorMessage={message} />}\n      {successModal && <SuccessModal setShow={setSuccessModal} show={successModal} message={message} />}\n      {viewOrder && <ViewOrderModal order={orderSelected} onClose={closeModal} onConfirm={takeOrder} />}\n    </Box>\n\n  );\n};\n\nOrdersList.propTypes = {\n  orders: PropTypes.array.isRequired,\n  setLoading: PropTypes.func.isRequired,\n};\n\nexport default OrdersList;\n"]}