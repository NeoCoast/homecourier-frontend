6c9137458835db08a74c967f67c76895
/* istanbul ignore next */
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var
/* istanbul ignore next */
_react = _interopRequireWildcard(require("react"));

var
/* istanbul ignore next */
_grommet = require("grommet");

var
/* istanbul ignore next */
_propTypes = _interopRequireDefault(require("prop-types"));

var
/* istanbul ignore next */
_orders = _interopRequireDefault(require("Api/orders.service"));

var
/* istanbul ignore next */
_reactRedux = require("react-redux");

var
/* istanbul ignore next */
_OrderCard = _interopRequireDefault(require("Components/OrderCard"));

var
/* istanbul ignore next */
_ViewOrderModal = _interopRequireDefault(require("Components/Modals/ViewOrderModal"));

var
/* istanbul ignore next */
_ErrorModal = _interopRequireDefault(require("Components/Modals/ErrorModal"));

var
/* istanbul ignore next */
_SuccessModal = _interopRequireDefault(require("Components/Modals/SuccessModal"));

/* istanbul ignore next */
function cov_116esb8rfk() {
  var path = "/home/agus/Documents/homecourier/homecourier-frontend/src/components/OrdersList/index.jsx";
  var hash = "249b031a5ec6df5ea85e6b2ab7d7818c0ba444df";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/agus/Documents/homecourier/homecourier-frontend/src/components/OrdersList/index.jsx",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 68,
          column: 1
        }
      },
      "1": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "2": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "3": {
        start: {
          line: 14,
          column: 6
        },
        end: {
          line: 14,
          column: 23
        }
      },
      "4": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "5": {
        start: {
          line: 19,
          column: 6
        },
        end: {
          line: 19,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 60
        }
      },
      "7": {
        start: {
          line: 21,
          column: 6
        },
        end: {
          line: 21,
          column: 28
        }
      },
      "8": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "9": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 35
        }
      },
      "10": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "11": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 67
        }
      },
      "12": {
        start: {
          line: 28,
          column: 45
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "13": {
        start: {
          line: 30,
          column: 36
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "14": {
        start: {
          line: 31,
          column: 38
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "15": {
        start: {
          line: 32,
          column: 42
        },
        end: {
          line: 32,
          column: 57
        }
      },
      "16": {
        start: {
          line: 33,
          column: 32
        },
        end: {
          line: 33,
          column: 44
        }
      },
      "17": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 34,
          column: 52
        }
      },
      "18": {
        start: {
          line: 35,
          column: 44
        },
        end: {
          line: 35,
          column: 58
        }
      },
      "19": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 40,
          column: 3
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 28
        }
      },
      "21": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 23
        }
      },
      "22": {
        start: {
          line: 42,
          column: 21
        },
        end: {
          line: 44,
          column: 3
        }
      },
      "23": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 24
        }
      },
      "24": {
        start: {
          line: 46,
          column: 2
        },
        end: {
          line: 67,
          column: 4
        }
      },
      "25": {
        start: {
          line: 58,
          column: 10
        },
        end: {
          line: 58,
          column: 102
        }
      },
      "26": {
        start: {
          line: 70,
          column: 0
        },
        end: {
          line: 73,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 19
          },
          end: {
            line: 11,
            column: 20
          }
        },
        loc: {
          start: {
            line: 11,
            column: 47
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 12,
            column: 21
          }
        },
        loc: {
          start: {
            line: 12,
            column: 39
          },
          end: {
            line: 27,
            column: 3
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 34
          },
          end: {
            line: 28,
            column: 35
          }
        },
        loc: {
          start: {
            line: 28,
            column: 45
          },
          end: {
            line: 28,
            column: 66
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 20
          },
          end: {
            line: 37,
            column: 21
          }
        },
        loc: {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 40,
            column: 3
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 42,
            column: 21
          },
          end: {
            line: 42,
            column: 22
          }
        },
        loc: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 44,
            column: 3
          }
        },
        line: 42
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 57,
            column: 10
          }
        },
        loc: {
          start: {
            line: 58,
            column: 10
          },
          end: {
            line: 58,
            column: 102
          }
        },
        line: 58
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 52,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 54
          },
          end: {
            line: 52,
            column: 61
          }
        }, {
          start: {
            line: 52,
            column: 64
          },
          end: {
            line: 52,
            column: 70
          }
        }],
        line: 52
      },
      "1": {
        loc: {
          start: {
            line: 62,
            column: 7
          },
          end: {
            line: 62,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 7
          },
          end: {
            line: 62,
            column: 17
          }
        }, {
          start: {
            line: 62,
            column: 21
          },
          end: {
            line: 62,
            column: 100
          }
        }],
        line: 62
      },
      "2": {
        loc: {
          start: {
            line: 63,
            column: 7
          },
          end: {
            line: 63,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 7
          },
          end: {
            line: 63,
            column: 19
          }
        }, {
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 63,
            column: 103
          }
        }],
        line: 63
      },
      "3": {
        loc: {
          start: {
            line: 64,
            column: 7
          },
          end: {
            line: 64,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 7
          },
          end: {
            line: 64,
            column: 16
          }
        }, {
          start: {
            line: 64,
            column: 20
          },
          end: {
            line: 64,
            column: 103
          }
        }],
        line: 64
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "249b031a5ec6df5ea85e6b2ab7d7818c0ba444df"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_116esb8rfk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_116esb8rfk();
cov_116esb8rfk().s[0]++;

var OrdersList = function OrdersList(
/* istanbul ignore next */
_ref) {
  /* istanbul ignore next */
  var orders = _ref.orders,
      setLoading = _ref.setLoading;

  /* istanbul ignore next */
  cov_116esb8rfk().f[0]++;
  cov_116esb8rfk().s[1]++;

  var takeOrder =
  /* istanbul ignore next */

  /*#__PURE__*/
  function () {
    var _ref2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function
    /* istanbul ignore next */
    _callee(orderId)
    /* istanbul ignore next */
    {
      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              cov_116esb8rfk().f[1]++;
              cov_116esb8rfk().s[2]++;
              _context.prev = 2;
              cov_116esb8rfk().s[3]++;
              setLoading(true);
              cov_116esb8rfk().s[4]++;
              _context.next = 8;
              return (
                /* istanbul ignore next */
                _orders[
                /* istanbul ignore next */
                "default"].take({
                  volunteerId: volunteerId,
                  orderId: orderId
                })
              );

            case 8:
              cov_116esb8rfk().s[5]++;
              setLoading(false);
              cov_116esb8rfk().s[6]++;
              setMessage('Ha tomado la orden! Gracias por ayudar!');
              cov_116esb8rfk().s[7]++;
              setSuccessModal(true);
              _context.next = 24;
              break;

            case 16:
              _context.prev = 16;
              _context.t0 = _context["catch"](2);
              cov_116esb8rfk().s[8]++;
              setLoading(false);
              cov_116esb8rfk().s[9]++;
              setMessage('Hubo un error.');
              cov_116esb8rfk().s[10]++;
              setErrorModal(true);

            case 24:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[2, 16]]);
    }));

    return function takeOrder(_x) {
      return _ref2.apply(this, arguments);
    };
  }();

  var volunteerId =
  /* istanbul ignore next */
  (cov_116esb8rfk().s[11]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _reactRedux.
  /* istanbul ignore next */
  useSelector)(function (state) {
    /* istanbul ignore next */
    cov_116esb8rfk().f[2]++;
    cov_116esb8rfk().s[12]++;
    return state.logUser.data.id;
  }));

  /* istanbul ignore next */
  var _ref3 = (cov_116esb8rfk().s[13]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useState)(false)),
      _ref4 = (0, _slicedToArray2["default"])(_ref3, 2),
      viewOrder = _ref4[0],
      setViewOrder = _ref4[1];

  /* istanbul ignore next */
  var _ref5 = (cov_116esb8rfk().s[14]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useState)(false)),
      _ref6 = (0, _slicedToArray2["default"])(_ref5, 2),
      errorModal = _ref6[0],
      setErrorModal = _ref6[1];

  /* istanbul ignore next */
  var _ref7 = (cov_116esb8rfk().s[15]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useState)(false)),
      _ref8 = (0, _slicedToArray2["default"])(_ref7, 2),
      successModal = _ref8[0],
      setSuccessModal = _ref8[1];

  /* istanbul ignore next */
  var _ref9 = (cov_116esb8rfk().s[16]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useState)('')),
      _ref10 = (0, _slicedToArray2["default"])(_ref9, 2),
      message = _ref10[0],
      setMessage = _ref10[1];

  var viewportSize =
  /* istanbul ignore next */
  (cov_116esb8rfk().s[17]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useContext)(
  /* istanbul ignore next */
  _grommet.
  /* istanbul ignore next */
  ResponsiveContext));

  /* istanbul ignore next */
  var _ref11 = (cov_116esb8rfk().s[18]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useState)(null)),
      _ref12 = (0, _slicedToArray2["default"])(_ref11, 2),
      orderSelected = _ref12[0],
      setOrderSelected = _ref12[1];

  /* istanbul ignore next */
  cov_116esb8rfk().s[19]++;

  var openModal = function openModal(order) {
    /* istanbul ignore next */
    cov_116esb8rfk().f[3]++;
    cov_116esb8rfk().s[20]++;
    setOrderSelected(order);

    /* istanbul ignore next */
    cov_116esb8rfk().s[21]++;
    setViewOrder(true);
  };

  /* istanbul ignore next */
  cov_116esb8rfk().s[22]++;

  var closeModal = function closeModal() {
    /* istanbul ignore next */
    cov_116esb8rfk().f[4]++;
    cov_116esb8rfk().s[23]++;
    setViewOrder(false);
  };

  /* istanbul ignore next */
  cov_116esb8rfk().s[24]++;
  return /*#__PURE__*/(
    /* istanbul ignore next */
    _react["default"].createElement(
    /* istanbul ignore next */
    _grommet.
    /* istanbul ignore next */
    Box,
    /* istanbul ignore next */
    {
      overflow: "auto",
      flex: false
    }, /*#__PURE__*/
    /* istanbul ignore next */
    _react["default"].createElement(
    /* istanbul ignore next */
    _grommet.
    /* istanbul ignore next */
    InfiniteScroll,
    /* istanbul ignore next */
    {
      direction: "column",
      pad: {
        horizontal: viewportSize === 'small' ?
        /* istanbul ignore next */
        (cov_116esb8rfk().b[0][0]++, 'small') :
        /* istanbul ignore next */
        (cov_116esb8rfk().b[0][1]++, '20vw'),
        vertical: 'medium'
      },
      overflow: "auto",
      fill:
      /* istanbul ignore next */
      true,
      items: orders
    }, function (order) {
      /* istanbul ignore next */
      cov_116esb8rfk().f[5]++;
      cov_116esb8rfk().s[25]++;
      return /*#__PURE__*/(
        /* istanbul ignore next */
        _react["default"].createElement(
        /* istanbul ignore next */
        _OrderCard[
        /* istanbul ignore next */
        "default"],
        /* istanbul ignore next */
        {
          order: order,
          viewportSize: viewportSize,
          key: order.id,
          openModal: openModal
        })
      );
    }),
    /* istanbul ignore next */
    (cov_116esb8rfk().b[1][0]++, errorModal) &&
    /* istanbul ignore next */
    (cov_116esb8rfk().b[1][1]++, /*#__PURE__*/
    /* istanbul ignore next */
    _react["default"].createElement(
    /* istanbul ignore next */
    _ErrorModal[
    /* istanbul ignore next */
    "default"],
    /* istanbul ignore next */
    {
      setShow: setErrorModal,
      show: errorModal,
      errorMessage: message
    })),
    /* istanbul ignore next */
    (cov_116esb8rfk().b[2][0]++, successModal) &&
    /* istanbul ignore next */
    (cov_116esb8rfk().b[2][1]++, /*#__PURE__*/
    /* istanbul ignore next */
    _react["default"].createElement(
    /* istanbul ignore next */
    _SuccessModal[
    /* istanbul ignore next */
    "default"],
    /* istanbul ignore next */
    {
      setShow: setSuccessModal,
      show: successModal,
      message: message
    })),
    /* istanbul ignore next */
    (cov_116esb8rfk().b[3][0]++, viewOrder) &&
    /* istanbul ignore next */
    (cov_116esb8rfk().b[3][1]++, /*#__PURE__*/
    /* istanbul ignore next */
    _react["default"].createElement(
    /* istanbul ignore next */
    _ViewOrderModal[
    /* istanbul ignore next */
    "default"],
    /* istanbul ignore next */
    {
      order: orderSelected,
      onClose: closeModal,
      onConfirm: takeOrder
    })))
  );
};

/* istanbul ignore next */
cov_116esb8rfk().s[26]++;
OrdersList.propTypes = {
  orders:
  /* istanbul ignore next */
  _propTypes[
  /* istanbul ignore next */
  "default"].array.isRequired,
  setLoading:
  /* istanbul ignore next */
  _propTypes[
  /* istanbul ignore next */
  "default"].func.isRequired
};

/* istanbul ignore next */
var _default = OrdersList;

/* istanbul ignore next */
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,