69ed3ff591e136169db09ee7f5758f97
"use strict";

_getJestObj().mock('react-redux', function () {
  return {
    useDispatch: jest.fn(),
    useSelector: jest.fn(),
    useHistory: function useHistory() {
      return {
        push: jest.fn()
      };
    }
  };
});

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _faker = _interopRequireDefault(require("faker"));

var _react2 = require("@testing-library/react");

var _reactRedux = require("react-redux");

var _Login = _interopRequireDefault(require("Containers/Login"));

var _reactRouterDom = require("react-router-dom");

function _getJestObj() {
  var _require = require("@jest/globals"),
      jest = _require.jest;

  _getJestObj = function _getJestObj() {
    return jest;
  };

  return jest;
}

describe('Register', function () {
  beforeEach(function () {
    _reactRedux.useSelector.mockImplementation(function (selector) {
      return selector({
        logUser: {
          data: {
            documentNumber: '232323'
          },
          loggedIn: false
        }
      });
    });
  });
  test('Has login button', function () {
    var _render = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_reactRouterDom.BrowserRouter, null, /*#__PURE__*/_react["default"].createElement(_Login["default"], null))),
        getByText = _render.getByText;

    expect(getByText(/Login/i)).toBeInTheDocument();
  });
  test('Shows Required Error', function () {
    var _render2 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_reactRouterDom.BrowserRouter, null, /*#__PURE__*/_react["default"].createElement(_Login["default"], null))),
        getByText = _render2.getByText;

    _react2.fireEvent.change(document.getElementById('email'), {
      target: {
        value: 'esto no es email'
      }
    });

    _react2.fireEvent.change(document.getElementById('password'), {
      target: {
        value: 'password'
      }
    });

    _react2.fireEvent.click(getByText(/Login/i));

    expect(getByText(/Inserte un email v√°lido/i)).toBeInTheDocument();
  });
  test('Submits form', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    var dom, user;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            dom = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_reactRouterDom.BrowserRouter, null, /*#__PURE__*/_react["default"].createElement(_Login["default"], null)));
            user = {
              email: _faker["default"].internet.email(),
              password: _faker["default"].internet.password()
            };

            _react2.fireEvent.change(document.getElementById('email'), {
              target: {
                value: user.email
              }
            });

            _react2.fireEvent.change(document.getElementById('password'), {
              target: {
                value: user.password
              }
            });

            _react2.fireEvent.click(dom.getByText(/Login/i));

            _context.next = 7;
            return (0, _react2.waitFor)(function () {
              expect(dom.getByText(/Lo Sentimos! Ha ocurrido error./i)).toBeInTheDocument();
            });

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxvZ2luLnRlc3QuanMiXSwibmFtZXMiOlsibW9jayIsInVzZURpc3BhdGNoIiwiamVzdCIsImZuIiwidXNlU2VsZWN0b3IiLCJ1c2VIaXN0b3J5IiwicHVzaCIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsIm1vY2tJbXBsZW1lbnRhdGlvbiIsInNlbGVjdG9yIiwibG9nVXNlciIsImRhdGEiLCJkb2N1bWVudE51bWJlciIsImxvZ2dlZEluIiwidGVzdCIsImdldEJ5VGV4dCIsImV4cGVjdCIsInRvQmVJblRoZURvY3VtZW50IiwiZmlyZUV2ZW50IiwiY2hhbmdlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInRhcmdldCIsInZhbHVlIiwiY2xpY2siLCJkb20iLCJ1c2VyIiwiZW1haWwiLCJmYWtlciIsImludGVybmV0IiwicGFzc3dvcmQiXSwibWFwcGluZ3MiOiI7O0FBT0EsY0FBS0EsSUFBTCxDQUFVLGFBQVYsRUFBeUI7QUFBQSxTQUFPO0FBQzlCQyxJQUFBQSxXQUFXLEVBQUVDLElBQUksQ0FBQ0MsRUFBTCxFQURpQjtBQUU5QkMsSUFBQUEsV0FBVyxFQUFFRixJQUFJLENBQUNDLEVBQUwsRUFGaUI7QUFHOUJFLElBQUFBLFVBQVUsRUFBRTtBQUFBLGFBQU87QUFDakJDLFFBQUFBLElBQUksRUFBRUosSUFBSSxDQUFDQyxFQUFMO0FBRFcsT0FBUDtBQUFBO0FBSGtCLEdBQVA7QUFBQSxDQUF6Qjs7Ozs7Ozs7QUFQQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7OztBQVVBSSxRQUFRLENBQUMsVUFBRCxFQUFhLFlBQU07QUFDekJDLEVBQUFBLFVBQVUsQ0FBQyxZQUFNO0FBQ2ZKLDRCQUFZSyxrQkFBWixDQUErQixVQUFDQyxRQUFEO0FBQUEsYUFBY0EsUUFBUSxDQUFDO0FBQ3BEQyxRQUFBQSxPQUFPLEVBQUU7QUFDUEMsVUFBQUEsSUFBSSxFQUFFO0FBQUVDLFlBQUFBLGNBQWMsRUFBRTtBQUFsQixXQURDO0FBRVBDLFVBQUFBLFFBQVEsRUFBRTtBQUZIO0FBRDJDLE9BQUQsQ0FBdEI7QUFBQSxLQUEvQjtBQU1ELEdBUFMsQ0FBVjtBQVNBQyxFQUFBQSxJQUFJLENBQUMsa0JBQUQsRUFBcUIsWUFBTTtBQUFBLGtCQUNQLGtDQUFPLGdDQUFDLDZCQUFELHFCQUFRLGdDQUFDLGlCQUFELE9BQVIsQ0FBUCxDQURPO0FBQUEsUUFDckJDLFNBRHFCLFdBQ3JCQSxTQURxQjs7QUFHN0JDLElBQUFBLE1BQU0sQ0FBQ0QsU0FBUyxDQUFDLFFBQUQsQ0FBVixDQUFOLENBQTRCRSxpQkFBNUI7QUFDRCxHQUpHLENBQUo7QUFNQUgsRUFBQUEsSUFBSSxDQUFDLHNCQUFELEVBQXlCLFlBQU07QUFBQSxtQkFDWCxrQ0FBTyxnQ0FBQyw2QkFBRCxxQkFBUSxnQ0FBQyxpQkFBRCxPQUFSLENBQVAsQ0FEVztBQUFBLFFBQ3pCQyxTQUR5QixZQUN6QkEsU0FEeUI7O0FBR2pDRyxzQkFBVUMsTUFBVixDQUFpQkMsUUFBUSxDQUFDQyxjQUFULENBQXdCLE9BQXhCLENBQWpCLEVBQW1EO0FBQUVDLE1BQUFBLE1BQU0sRUFBRTtBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVDtBQUFWLEtBQW5EOztBQUNBTCxzQkFBVUMsTUFBVixDQUFpQkMsUUFBUSxDQUFDQyxjQUFULENBQXdCLFVBQXhCLENBQWpCLEVBQXNEO0FBQUVDLE1BQUFBLE1BQU0sRUFBRTtBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVDtBQUFWLEtBQXREOztBQUVBTCxzQkFBVU0sS0FBVixDQUFnQlQsU0FBUyxDQUFDLFFBQUQsQ0FBekI7O0FBRUFDLElBQUFBLE1BQU0sQ0FBQ0QsU0FBUyxDQUFDLDBCQUFELENBQVYsQ0FBTixDQUE4Q0UsaUJBQTlDO0FBQ0QsR0FURyxDQUFKO0FBV0FILEVBQUFBLElBQUksQ0FBQyxjQUFELDZGQUFpQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDYlcsWUFBQUEsR0FEYSxHQUNQLGtDQUFPLGdDQUFDLDZCQUFELHFCQUFRLGdDQUFDLGlCQUFELE9BQVIsQ0FBUCxDQURPO0FBR2JDLFlBQUFBLElBSGEsR0FHTjtBQUNYQyxjQUFBQSxLQUFLLEVBQUVDLGtCQUFNQyxRQUFOLENBQWVGLEtBQWYsRUFESTtBQUVYRyxjQUFBQSxRQUFRLEVBQUVGLGtCQUFNQyxRQUFOLENBQWVDLFFBQWY7QUFGQyxhQUhNOztBQVFuQlosOEJBQVVDLE1BQVYsQ0FBaUJDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixPQUF4QixDQUFqQixFQUFtRDtBQUFFQyxjQUFBQSxNQUFNLEVBQUU7QUFBRUMsZ0JBQUFBLEtBQUssRUFBRUcsSUFBSSxDQUFDQztBQUFkO0FBQVYsYUFBbkQ7O0FBQ0FULDhCQUFVQyxNQUFWLENBQWlCQyxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsVUFBeEIsQ0FBakIsRUFBc0Q7QUFBRUMsY0FBQUEsTUFBTSxFQUFFO0FBQUVDLGdCQUFBQSxLQUFLLEVBQUVHLElBQUksQ0FBQ0k7QUFBZDtBQUFWLGFBQXREOztBQUNBWiw4QkFBVU0sS0FBVixDQUFnQkMsR0FBRyxDQUFDVixTQUFKLENBQWMsUUFBZCxDQUFoQjs7QUFWbUI7QUFBQSxtQkFXYixxQkFBUSxZQUFNO0FBQ2xCQyxjQUFBQSxNQUFNLENBQUNTLEdBQUcsQ0FBQ1YsU0FBSixDQUFjLGtDQUFkLENBQUQsQ0FBTixDQUEwREUsaUJBQTFEO0FBQ0QsYUFGSyxDQVhhOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWpCLEdBQUo7QUFlRCxDQTFDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBmYWtlciBmcm9tICdmYWtlcic7XG5pbXBvcnQgeyByZW5kZXIsIGZpcmVFdmVudCwgd2FpdEZvciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnO1xuaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgTG9naW4gZnJvbSAnQ29udGFpbmVycy9Mb2dpbic7XG5pbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuXG5qZXN0Lm1vY2soJ3JlYWN0LXJlZHV4JywgKCkgPT4gKHtcbiAgdXNlRGlzcGF0Y2g6IGplc3QuZm4oKSxcbiAgdXNlU2VsZWN0b3I6IGplc3QuZm4oKSxcbiAgdXNlSGlzdG9yeTogKCkgPT4gKHtcbiAgICBwdXNoOiBqZXN0LmZuKCksXG4gIH0pLFxufSkpO1xuXG5kZXNjcmliZSgnUmVnaXN0ZXInLCAoKSA9PiB7XG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIHVzZVNlbGVjdG9yLm1vY2tJbXBsZW1lbnRhdGlvbigoc2VsZWN0b3IpID0+IHNlbGVjdG9yKHtcbiAgICAgIGxvZ1VzZXI6IHtcbiAgICAgICAgZGF0YTogeyBkb2N1bWVudE51bWJlcjogJzIzMjMyMycgfSxcbiAgICAgICAgbG9nZ2VkSW46IGZhbHNlLFxuICAgICAgfSxcbiAgICB9KSk7XG4gIH0pO1xuXG4gIHRlc3QoJ0hhcyBsb2dpbiBidXR0b24nLCAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRleHQgfSA9IHJlbmRlcig8Um91dGVyPjxMb2dpbiAvPjwvUm91dGVyPik7XG5cbiAgICBleHBlY3QoZ2V0QnlUZXh0KC9Mb2dpbi9pKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgfSk7XG5cbiAgdGVzdCgnU2hvd3MgUmVxdWlyZWQgRXJyb3InLCAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRleHQgfSA9IHJlbmRlcig8Um91dGVyPjxMb2dpbiAvPjwvUm91dGVyPik7XG5cbiAgICBmaXJlRXZlbnQuY2hhbmdlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlbWFpbCcpLCB7IHRhcmdldDogeyB2YWx1ZTogJ2VzdG8gbm8gZXMgZW1haWwnIH0gfSk7XG4gICAgZmlyZUV2ZW50LmNoYW5nZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGFzc3dvcmQnKSwgeyB0YXJnZXQ6IHsgdmFsdWU6ICdwYXNzd29yZCcgfSB9KTtcblxuICAgIGZpcmVFdmVudC5jbGljayhnZXRCeVRleHQoL0xvZ2luL2kpKTtcblxuICAgIGV4cGVjdChnZXRCeVRleHQoL0luc2VydGUgdW4gZW1haWwgdsOhbGlkby9pKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgfSk7XG5cbiAgdGVzdCgnU3VibWl0cyBmb3JtJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGRvbSA9IHJlbmRlcig8Um91dGVyPjxMb2dpbiAvPjwvUm91dGVyPik7XG5cbiAgICBjb25zdCB1c2VyID0ge1xuICAgICAgZW1haWw6IGZha2VyLmludGVybmV0LmVtYWlsKCksXG4gICAgICBwYXNzd29yZDogZmFrZXIuaW50ZXJuZXQucGFzc3dvcmQoKSxcbiAgICB9O1xuXG4gICAgZmlyZUV2ZW50LmNoYW5nZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZW1haWwnKSwgeyB0YXJnZXQ6IHsgdmFsdWU6IHVzZXIuZW1haWwgfSB9KTtcbiAgICBmaXJlRXZlbnQuY2hhbmdlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwYXNzd29yZCcpLCB7IHRhcmdldDogeyB2YWx1ZTogdXNlci5wYXNzd29yZCB9IH0pO1xuICAgIGZpcmVFdmVudC5jbGljayhkb20uZ2V0QnlUZXh0KC9Mb2dpbi9pKSk7XG4gICAgYXdhaXQgd2FpdEZvcigoKSA9PiB7XG4gICAgICBleHBlY3QoZG9tLmdldEJ5VGV4dCgvTG8gU2VudGltb3MhIEhhIG9jdXJyaWRvIGVycm9yLi9pKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==