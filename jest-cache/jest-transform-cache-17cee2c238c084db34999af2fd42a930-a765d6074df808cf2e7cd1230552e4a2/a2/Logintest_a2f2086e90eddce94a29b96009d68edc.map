{"version":3,"sources":["Login.test.js"],"names":["mock","useDispatch","jest","fn","useSelector","useHistory","push","describe","beforeEach","mockImplementation","selector","logUser","data","documentNumber","loggedIn","test","getByText","expect","toBeInTheDocument","fireEvent","change","document","getElementById","target","value","click","dom","user","email","faker","internet","password"],"mappings":"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","sourcesContent":["import React from 'react';\nimport faker from 'faker';\nimport { render, fireEvent, waitFor } from '@testing-library/react';\nimport { useSelector } from 'react-redux';\nimport Login from 'Containers/Login';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\njest.mock('react-redux', () => ({\n  useDispatch: jest.fn(),\n  useSelector: jest.fn(),\n  useHistory: () => ({\n    push: jest.fn(),\n  }),\n}));\n\ndescribe('Register', () => {\n  beforeEach(() => {\n    useSelector.mockImplementation((selector) => selector({\n      logUser: {\n        data: { documentNumber: '232323' },\n        loggedIn: false,\n      },\n    }));\n  });\n\n  test('Has login button', () => {\n    const { getByText } = render(<Router><Login /></Router>);\n\n    expect(getByText(/Login/i)).toBeInTheDocument();\n  });\n\n  test('Shows Required Error', () => {\n    const { getByText } = render(<Router><Login /></Router>);\n\n    fireEvent.change(document.getElementById('email'), { target: { value: 'esto no es email' } });\n    fireEvent.change(document.getElementById('password'), { target: { value: 'password' } });\n\n    fireEvent.click(getByText(/Login/i));\n\n    expect(getByText(/Inserte un email vÃ¡lido/i)).toBeInTheDocument();\n  });\n\n  test('Submits form', async () => {\n    const dom = render(<Router><Login /></Router>);\n\n    const user = {\n      email: faker.internet.email(),\n      password: faker.internet.password(),\n    };\n\n    fireEvent.change(document.getElementById('email'), { target: { value: user.email } });\n    fireEvent.change(document.getElementById('password'), { target: { value: user.password } });\n    fireEvent.click(dom.getByText(/Login/i));\n    await waitFor(() => {\n      expect(dom.getByText(/Lo Sentimos! Ha ocurrido error./i)).toBeInTheDocument();\n    });\n  });\n});\n"]}