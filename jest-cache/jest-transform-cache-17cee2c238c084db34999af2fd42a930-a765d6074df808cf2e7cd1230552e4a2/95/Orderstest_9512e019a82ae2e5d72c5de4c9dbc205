0d6dd2f62a3867659db834e2b48562c8
"use strict";

_getJestObj().mock('Api/orders.service', function () {
  return {
    takeOrder: jest.fn()
  };
});

_getJestObj().mock('react-redux', function () {
  return {
    useDispatch: jest.fn(),
    useSelector: jest.fn(),
    useHistory: function useHistory() {
      return {
        push: jest.fn()
      };
    }
  };
});

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _faker = _interopRequireDefault(require("faker"));

var _react2 = require("@testing-library/react");

var _reactRedux = require("react-redux");

var _orders = _interopRequireDefault(require("Api/orders.service"));

var _OrdersList = _interopRequireDefault(require("Components/OrdersList"));

var _OrderCard = _interopRequireDefault(require("Components/OrderCard"));

var _ViewOrderModal = _interopRequireDefault(require("Components/Modals/ViewOrderModal"));

var _SuccessModal = _interopRequireDefault(require("Components/Modals/SuccessModal"));

function _getJestObj() {
  var _require = require("@jest/globals"),
      jest = _require.jest;

  _getJestObj = function _getJestObj() {
    return jest;
  };

  return jest;
}

describe('Orders', function () {
  beforeEach(function () {
    _reactRedux.useSelector.mockImplementation(function (selector) {
      return selector({
        logUser: {
          data: {
            documentNumber: '232323'
          },
          loggedIn: false
        }
      });
    });
  });
  var openModal = jest.fn();
  var viewportSize = jest.fn();
  test('Shows the title', function () {
    var props = {
      order: {
        description: _faker["default"].lorem.paragraph(),
        title: _faker["default"].random.words(),
        helpee: _faker["default"].internet.userName(),
        categories: [{
          label: 'Supermercado'
        }]
      }
    };

    var _render = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_OrderCard["default"], {
      order: props.order,
      viewportSize: viewportSize,
      openModal: openModal
    })),
        getByText = _render.getByText;

    expect(getByText(props.order.title)).toBeInTheDocument();
  });
  test('Shows the helpee', function () {
    var props = {
      order: {
        description: _faker["default"].lorem.paragraph(),
        title: _faker["default"].random.words(),
        helpee: {
          name: _faker["default"].name.firstName(),
          lastname: _faker["default"].name.lastName()
        },
        categories: [{
          label: 'Supermercado'
        }]
      }
    };

    var _render2 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_OrderCard["default"], {
      order: props.order,
      viewportSize: viewportSize,
      openModal: openModal
    })),
        getByText = _render2.getByText;

    expect(getByText("".concat(props.order.helpee.name, " ").concat(props.order.helpee.lastname))).toBeInTheDocument();
  });
  test('Shows the description', function () {
    var props = {
      order: {
        description: _faker["default"].lorem.paragraph(),
        title: _faker["default"].random.words(),
        helpee: _faker["default"].internet.userName(),
        categories: [{
          label: 'Supermercado'
        }]
      }
    };

    var _render3 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_OrderCard["default"], {
      order: props.order,
      viewportSize: viewportSize,
      openModal: openModal
    })),
        getByText = _render3.getByText;

    expect(getByText(props.order.description)).toBeInTheDocument();
  });
  test('Open modal', function () {
    var props = {
      order: {
        description: _faker["default"].lorem.paragraph(),
        title: _faker["default"].random.words(),
        helpee: _faker["default"].internet.userName(),
        categories: [{
          label: 'Supermercado'
        }]
      }
    };

    var _render4 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_OrderCard["default"], {
      order: props.order,
      viewportSize: "small",
      openModal: openModal
    })),
        getByText = _render4.getByText;

    _react2.fireEvent.click(getByText(/Ver más/i));

    expect(openModal).toHaveBeenCalledTimes(1);
  });
  test('Shows orders', function () {
    var props = {
      orders: [{
        id: _faker["default"].random.number(),
        description: _faker["default"].lorem.paragraph(),
        title: _faker["default"].random.words(),
        helpee: _faker["default"].internet.userName(),
        categories: [{
          label: 'Supermercado'
        }]
      }]
    };
    var setLoading = jest.fn();

    var _render5 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_OrdersList["default"], {
      orders: props.orders,
      setLoading: setLoading
    })),
        getByText = _render5.getByText;

    expect(getByText(props.orders[0].description)).toBeInTheDocument();
  });
  test('Shows more', function () {
    var props = {
      orders: [{
        id: _faker["default"].random.number(),
        description: _faker["default"].lorem.paragraph(),
        title: _faker["default"].random.words(),
        helpee: _faker["default"].internet.userName(),
        categories: [{
          label: 'Supermercado'
        }]
      }]
    };
    var setLoading = jest.fn();

    var _render6 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_OrdersList["default"], {
      orders: props.orders,
      setLoading: setLoading
    })),
        getByText = _render6.getByText;

    _react2.fireEvent.click(getByText(/Ver más/i));

    expect(getByText(/Categorías/i)).toBeInTheDocument();
  });
  test('Cancel view more', function () {
    var props = {
      orders: [{
        id: _faker["default"].random.number(),
        description: _faker["default"].lorem.paragraph(),
        title: _faker["default"].random.words(),
        helpee: _faker["default"].internet.userName(),
        categories: [{
          label: 'Supermercado'
        }]
      }]
    };
    var setLoading = jest.fn();

    var _render7 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_OrdersList["default"], {
      orders: props.orders,
      setLoading: setLoading
    })),
        getByText = _render7.getByText,
        getAllByText = _render7.getAllByText;

    _react2.fireEvent.click(getByText(/Ver más/i));

    _react2.fireEvent.click(getAllByText(/Cancelar/i)[1]);

    expect(getAllByText(props.orders[0].description)[0]).toBeInTheDocument();
  });
  test('Take order', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    var props, setLoading, _render8, getByText, getAllByText;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            props = {
              orders: [{
                id: _faker["default"].random.number(),
                description: _faker["default"].lorem.paragraph(),
                title: _faker["default"].random.words(),
                helpee: _faker["default"].internet.userName(),
                categories: [{
                  label: 'Supermercado'
                }]
              }]
            };

            _orders["default"].takeOrder.mockImplementation(function () {
              return null;
            });

            setLoading = jest.fn();
            _render8 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_OrdersList["default"], {
              orders: props.orders,
              setLoading: setLoading
            })), getByText = _render8.getByText, getAllByText = _render8.getAllByText;

            _react2.fireEvent.click(getByText(/Ver más/i));

            _react2.fireEvent.click(getAllByText(/Postularse/i)[2]);

            _context.next = 8;
            return (0, _react2.waitFor)(function () {
              expect(_orders["default"].takeOrder).toHaveBeenCalledTimes(1);
            });

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
  test('Take order modal', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
    var props, onClose, onConfirm, _render9, getAllByText;

    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            props = {
              order: {
                id: _faker["default"].random.number(),
                description: _faker["default"].lorem.paragraph(),
                title: _faker["default"].random.words(),
                helpee: _faker["default"].internet.userName(),
                categories: [{
                  label: 'Supermercado'
                }]
              }
            };
            onClose = jest.fn();
            onConfirm = jest.fn();
            _render9 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_ViewOrderModal["default"], {
              order: props.order,
              onClose: onClose,
              onConfirm: onConfirm
            })), getAllByText = _render9.getAllByText;

            _react2.fireEvent.click(getAllByText(/Postularse/i)[3]);

            _context2.next = 7;
            return (0, _react2.waitFor)(function () {
              expect(onConfirm).toHaveBeenCalledTimes(1);
              expect(onClose).toHaveBeenCalledTimes(1);
            });

          case 7:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  })));
  describe('Success modal for application', function () {
    test('ok button', function () {
      var setShow = jest.fn();
      (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_SuccessModal["default"], {
        message: "Ha tomado la orden! Gracias por ayudar!",
        show: true,
        setShow: setShow
      }));

      _react2.fireEvent.click(document.getElementById('close-ok-modal'));

      expect(setShow).toHaveBeenCalledTimes(1);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,